{"version":3,"sources":["SessionStats.tsx","model.ts","pairs.ts","PhonemeCheckGroup.tsx","SessionOptions.tsx","App.tsx","QuizSession.tsx","index.tsx"],"names":["SessionStats","Side","props","stats","outcomeSummary","Object","keys","map","label","successes","reps","failures","accuracy","toStats","outcomes","forEach","outcome","pair","pairs","pairId","left","phoneme","right","actualAnswer","correctAnswer","summarizeOutcomes","dataSource","columns","title","dataIndex","key","sorter","a","b","defaultSortOrder","render","toFixed","type","onClick","onDismiss","Pairs","id","PhonemeCheckGroup","state","selected","initialSelection","indeterminate","length","phonemes","all","this","onChange","gutter","offset","span","checked","e","target","setState","name","Group","options","value","checkboxValues","flatMap","React","Component","SessionOptions","pairsToTrain","selectedMonopthongs","selectedDitphthongs","selectedOtherPhonemes","concat","phonemePairIds","filterPairIdsBySelectedPhonemes","selectedPhonemes","onComplete","entries","filter","entry","includes","deduped","values","count","uniquePhonemes","sort","l","r","localeCompare","maxPairs","monopthongs","diphthongs","otherPhonemes","indexOf","style","textAlign","lineHeight","min","max","width","Math","bind","disabled","Stage","QuizSession","playNextSound","sound","soundQueue","slice","currentQuestion","chooseNextQuestion","pairsToQuiz","activePairs","questionOutcomes","window","addEventListener","keydownListener","removeEventListener","event","keyCode","play","Left","doAnswer","Right","nextQuestion","random","floor","undefined","side","areWeDoneWithPair","onSessionComplete","streakSize","lastRightSide","i","className","renderSound","loading","danger","soundId","url","playStatus","onFinishedPlaying","onFinishSound","App","stage","Configuring","array","size","Quizzing","score","Debriefing","Header","Layout","Content","Footer","src","alt","finishQuizzing","renderStats","startQuizzing","href","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb5688d3.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Table } from 'antd';\nimport { MinimalPairs, QuestionOutcome } from './model';\nimport { ColumnsType } from 'antd/lib/table';\n\ninterface SessionStatsProps {\n    outcomes: QuestionOutcome[],\n    pairs: MinimalPairs\n    onDismiss: () => void\n}\n\ninterface Stat {\n    label: string,\n    reps: number,\n    accuracy: number,\n}\n\ninterface SessionStasState {\n    stats: Stat[],\n}\n\nfunction SessionStats(props: SessionStatsProps) {\n\n    const stats = toStats(summarizeOutcomes(props));\n\n    const columns: ColumnsType<Stat> = [\n        {\n            title: 'Pair',\n            dataIndex: 'label',\n            key: 'label',\n        },\n        {\n            title: 'Repetitions',\n            sorter: (a, b) => a.reps - b.reps,\n            dataIndex: 'reps',\n            key: 'reps',\n        },\n        {\n            title: 'Accuracy',\n            key: 'accuracy',\n            dataIndex: 'accuracy',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.accuracy - b.accuracy,\n            render: (accuracy: number) => (accuracy * 100).toFixed(1) + \"%\",\n        },\n    ];\n\n    return (<>\n        <Table dataSource={stats} columns={columns} />\n        <Button type=\"primary\" onClick={props.onDismiss}>Dismiss</Button>\n    </>);\n}\n\nfunction summarizeOutcomes(props: SessionStatsProps) {\n    const outcomeSummary: { [key: string]: { successes: number, failures: number } } = {};\n    props.outcomes.forEach(outcome => {\n        const pair = props.pairs[outcome.pairId];\n        const label = `/${pair.left.phoneme}/ vs /${pair.right.phoneme}/`;\n        if (!outcomeSummary[label]) {\n            outcomeSummary[label] = { successes: 0, failures: 0 };\n        }\n        if (outcome.actualAnswer === outcome.correctAnswer) {\n            outcomeSummary[label].successes += 1;\n        }\n        else {\n            outcomeSummary[label].failures += 1;\n        }\n    });\n    return outcomeSummary;\n}\n\nfunction toStats(outcomeSummary: { [key: string]: { successes: number, failures: number } }): Stat[] {\n    return Object.keys(outcomeSummary)\n        .map(label => {\n            const { successes, failures } = outcomeSummary[label];\n            const reps = successes + failures;\n            const accuracy = successes / reps;\n            return ({ label, reps, accuracy });\n        });\n}\n\nexport default SessionStats;","export interface Phoneme {\n    id: string,\n    label: string,\n    phoneme: string\n}\n\nexport interface MinimalPair {\n    left: Phoneme,\n    right: Phoneme\n}\n\nexport interface MinimalPairs {\n    [key: string]: MinimalPair\n}\n\nexport enum Side {\n    Left = \"left\",\n    Right = \"right\"\n}\n\nexport interface Question {\n    pairId: string,\n    correctAnswer: Side,\n    actualAnswer?: Side\n}\n\nexport interface QuestionOutcome extends Question {\n    actualAnswer: Side\n}","import { MinimalPairs } from './model';\n\nconst MasonPairs: MinimalPairs = {\n    /* #region /ɪ/ vs /i:/ */\n    \"shit-sheet\": {\n        left: {\n            id: \"shit\",\n            label: \"shit\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"sheet\",\n            label: \"sheet\",\n            phoneme: \"i:\"\n        }\n    },\n    \"lip-leap\": {\n        left: {\n            id: \"lip\",\n            label: \"lip\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"leap\",\n            label: \"leap\",\n            phoneme: \"i:\"\n        }\n    },\n    \"rich-reach\": {\n        left: {\n            id: \"rich\",\n            label: \"rich\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"reach\",\n            label: \"reach\",\n            phoneme: \"i:\"\n        }\n    },\n    \"still-steal\": {\n        left: {\n            id: \"still\",\n            label: \"still\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"steal\",\n            label: \"steal\",\n            phoneme: \"i:\"\n        }\n    },\n    \"fist-feast\": {\n        left: {\n            id: \"fist\",\n            label: \"fist\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"feast\",\n            label: \"feast\",\n            phoneme: \"i:\"\n        }\n    },\n    \"fit-feet\": {\n        left: {\n            id: \"fit\",\n            label: \"fit\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"feet\",\n            label: \"feet\",\n            phoneme: \"i:\"\n        }\n    },\n    \"slip-sleep\": {\n        left: {\n            id: \"slip\",\n            label: \"slip\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"sleep\",\n            label: \"sleep\",\n            phoneme: \"i:\"\n        }\n    },\n    \"sin-seen\": {\n        left: {\n            id: \"sin\",\n            label: \"sin\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"seen\",\n            label: \"seen\",\n            phoneme: \"i:\"\n        }\n    },\n    \"lick-leak\": {\n        left: {\n            id: \"lick\",\n            label: \"lick\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"leak\",\n            label: \"leak\",\n            phoneme: \"i:\"\n        }\n    },\n    \"pill-peal\": {\n        left: {\n            id: \"pill\",\n            label: \"pill\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"peal\",\n            label: \"peal\",\n            phoneme: \"i:\"\n        }\n    },\n    \"gin-gene\": {\n        left: {\n            id: \"gin\",\n            label: \"gin\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"gene\",\n            label: \"gene\",\n            phoneme: \"i:\"\n        }\n    },\n    \"pick-peak\": {\n        left: {\n            id: \"pick\",\n            label: \"pick\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"peak\",\n            label: \"peak\",\n            phoneme: \"i:\"\n        }\n    },\n    \"rip-reap\": {\n        left: {\n            id: \"rip\",\n            label: \"rip\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"reap\",\n            label: \"reap\",\n            phoneme: \"i:\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /ʌ/ */\n    \"got-gut\": {\n        left: {\n            id: \"got\",\n            label: \"got\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"gut\",\n            label: \"gut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"pot-put\": {\n        left: {\n            id: \"pot\",\n            label: \"pot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"put\",\n            label: \"put\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"watt-what\": {\n        left: {\n            id: \"watt\",\n            label: \"watt\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"what\",\n            label: \"what\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"sock-suck\": {\n        left: {\n            id: \"sock\",\n            label: \"sock\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"suck\",\n            label: \"suck\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"shot-shut\": {\n        left: {\n            id: \"shot\",\n            label: \"shot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"shut\",\n            label: \"shut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"hot-hut\": {\n        left: {\n            id: \"hot\",\n            label: \"hot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"hut\",\n            label: \"hut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"rob-rub\": {\n        left: {\n            id: \"rob\",\n            label: \"rob\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"rub\",\n            label: \"rub\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"rot-rut\": {\n        left: {\n            id: \"rot\",\n            label: \"rot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"rut\",\n            label: \"rut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"not-nut\": {\n        left: {\n            id: \"not\",\n            label: \"not\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"nut\",\n            label: \"nut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /æ/ */\n    \"top-tap\": {\n        left: {\n            id: \"top\",\n            label: \"top\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"tap\",\n            label: \"tap\",\n            phoneme: \"æ\"\n        }\n    },\n    \"hot-hat\": {\n        left: {\n            id: \"hot\",\n            label: \"hot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"hat\",\n            label: \"hat\",\n            phoneme: \"æ\"\n        }\n    },\n    \"rock-rack\": {\n        left: {\n            id: \"rock\",\n            label: \"rock\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"rack\",\n            label: \"rack\",\n            phoneme: \"æ\"\n        }\n    },\n    \"bog-bag\": {\n        left: {\n            id: \"bog\",\n            label: \"bog\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"bag\",\n            label: \"bag\",\n            phoneme: \"æ\"\n        }\n    },\n    \"fog-fag\": {\n        left: {\n            id: \"fog\",\n            label: \"fog\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"fag\",\n            label: \"fag\",\n            phoneme: \"æ\"\n        }\n    },\n    \"gob-gab\": {\n        left: {\n            id: \"gob\",\n            label: \"gob\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"gab\",\n            label: \"gab\",\n            phoneme: \"æ\"\n        }\n    },\n    \"mop-map\": {\n        left: {\n            id: \"mop\",\n            label: \"mop\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"map\",\n            label: \"map\",\n            phoneme: \"æ\"\n        }\n    },\n    \"sock-sack\": {\n        left: {\n            id: \"sock\",\n            label: \"sock\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"sack\",\n            label: \"sack\",\n            phoneme: \"æ\"\n        }\n    },\n    \"lost-last\": {\n        left: {\n            id: \"lost\",\n            label: \"lost\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"last\",\n            label: \"last\",\n            phoneme: \"æ\"\n        }\n    },\n    \"pot-pat\": {\n        left: {\n            id: \"pot\",\n            label: \"pot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"pat\",\n            label: \"pat\",\n            phoneme: \"æ\"\n        }\n    },\n    \"flop-flap\": {\n        left: {\n            id: \"flop\",\n            label: \"flop\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"flap\",\n            label: \"flap\",\n            phoneme: \"æ\"\n        }\n    },\n    \"lob-lab\": {\n        left: {\n            id: \"lob\",\n            label: \"lob\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"lab\",\n            label: \"lab\",\n            phoneme: \"æ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /e/ */\n    \"bat-bet\": {\n        left: {\n            id: \"bat\",\n            label: \"bat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"bet\",\n            label: \"bet\",\n            phoneme: \"e\"\n        }\n    },\n    \"sad-said\": {\n        left: {\n            id: \"sad\",\n            label: \"sad\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"said\",\n            label: \"said\",\n            phoneme: \"e\"\n        }\n    },\n    \"had-head\": {\n        left: {\n            id: \"had\",\n            label: \"had\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"head\",\n            label: \"head\",\n            phoneme: \"e\"\n        }\n    },\n    \"cattle-kettle\": {\n        left: {\n            id: \"cattle\",\n            label: \"cattle\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"kettle\",\n            label: \"kettle\",\n            phoneme: \"e\"\n        }\n    },\n    \"lad-lead\": {\n        left: {\n            id: \"lad\",\n            label: \"lad\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"lead\",\n            label: \"lead\",\n            phoneme: \"e\"\n        }\n    },\n    \"gas-guess\": {\n        left: {\n            id: \"gas\",\n            label: \"gas\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"guess\",\n            label: \"guess\",\n            phoneme: \"e\"\n        }\n    },\n    \"slapped-slept\": {\n        left: {\n            id: \"slapped\",\n            label: \"slapped\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"slept\",\n            label: \"slept\",\n            phoneme: \"e\"\n        }\n    },\n    \"past-pest\": {\n        left: {\n            id: \"past\",\n            label: \"past\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"pest\",\n            label: \"pest\",\n            phoneme: \"e\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ʊ/ vs /u:/ */\n    \"stood-stewed\": {\n        left: {\n            id: \"stood\",\n            label: \"stood\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"stewed\",\n            label: \"stewed\",\n            phoneme: \"u:\"\n        },\n    },\n    \"look-luke\": {\n        left: {\n            id: \"look\",\n            label: \"look\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"luke\",\n            label: \"luke\",\n            phoneme: \"u:\"\n        },\n    },\n    \"wood-wooed\": {\n        left: {\n            id: \"wood\",\n            label: \"wood\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"wooed\",\n            label: \"wooed\",\n            phoneme: \"u:\"\n        },\n    },\n    \"pull-pool\": {\n        left: {\n            id: \"pull\",\n            label: \"pull\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"pool\",\n            label: \"pool\",\n            phoneme: \"u:\"\n        },\n    },\n    \"soot-suit\": {\n        left: {\n            id: \"soot\",\n            label: \"soot\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"suit\",\n            label: \"suit\",\n            phoneme: \"u:\"\n        },\n    },\n    \"cookie-kooky\": {\n        left: {\n            id: \"cookie\",\n            label: \"cookie\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"kooky\",\n            label: \"kooky\",\n            phoneme: \"u:\"\n        },\n    },\n    \"toll-tool\": {\n        left: {\n            id: \"toll\",\n            label: \"toll\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"tool\",\n            label: \"tool\",\n            phoneme: \"u:\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /oʊ/ */\n    \"ram-roam\": {\n        left: {\n            id: \"ram\",\n            label: \"ram\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"roam\",\n            label: \"roam\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"bat-boat\": {\n        left: {\n            id: \"bat2\",\n            label: \"bat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"boat\",\n            label: \"boat\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"ham-home\": {\n        left: {\n            id: \"ham\",\n            label: \"ham\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"home\",\n            label: \"home\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"sack-soak\": {\n        left: {\n            id: \"sack2\",\n            label: \"sack\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"soak\",\n            label: \"soak\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"cat-coat\": {\n        left: {\n            id: \"cat2\",\n            label: \"cat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"coat\",\n            label: \"coat\",\n            phoneme: \"oʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /oʊ/ */\n    \"nod-node\": {\n        left: {\n            id: \"nod\",\n            label: \"nod\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"node\",\n            label: \"node\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"mop-mope\": {\n        left: {\n            id: \"mop2\",\n            label: \"mop\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"mope\",\n            label: \"mope\",\n            phoneme: \"oʊ\"\n        }\n    },\n    \"cod-code\": {\n        left: {\n            id: \"cod\",\n            label: \"cod\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"code\",\n            label: \"code\",\n            phoneme: \"oʊ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /ʌ/ */\n    \"bought-but\": {\n        left: {\n            id: \"bought\",\n            label: \"bought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"but\",\n            label: \"but\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"hall-hull\": {\n        left: {\n            id: \"hall\",\n            label: \"hall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"hull\",\n            label: \"hull\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"caught-cut\": {\n        left: {\n            id: \"caught\",\n            label: \"caught\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"cut\",\n            label: \"cut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"daughter-dutter\": {\n        left: {\n            id: \"daughter\",\n            label: \"daughter\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"dutter\",\n            label: \"dutter\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"mall-mull\": {\n        left: {\n            id: \"mall2\",\n            label: \"mall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"mull\",\n            label: \"mull\",\n            phoneme: \"ʌ\"\n        },\n    },\n    \"gall-gull\": {\n        left: {\n            id: \"gall\",\n            label: \"gall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"gull\",\n            label: \"gull\",\n            phoneme: \"ʌ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /ʊ/ */\n    \"fall-full\": {\n        left: {\n            id: \"topquark_fall\",\n            label: \"fall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"topquark_full\",\n            label: \"full\",\n            phoneme: \"ʊ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /oʊ/ */\n    \"ball-bowl\": {\n        left: {\n            id: \"ball\",\n            label: \"ball\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"bowl\",\n            label: \"bowl\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"wrought-wrote\": {\n        left: {\n            id: \"wrought\",\n            label: \"wrought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"wrote\",\n            label: \"wrote\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"raw-row\": {\n        left: {\n            id: \"raw\",\n            label: \"raw\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"row\",\n            label: \"row\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"law-load\": {\n        left: {\n            id: \"law\",\n            label: \"law\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"load\",\n            label: \"load\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"called-cold\": {\n        left: {\n            id: \"called\",\n            label: \"called\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"cold\",\n            label: \"cold\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"ought-oat\": {\n        left: {\n            id: \"ought\",\n            label: \"ought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"oat\",\n            label: \"oat\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"tall-toll\": {\n        left: {\n            id: \"tall\",\n            label: \"tall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"toll\",\n            label: \"toll\",\n            phoneme: \"oʊ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /aʊ/ */\n    \"sand-sound\": {\n        left: {\n            id: \"sand\",\n            label: \"sand\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"sound\",\n            label: \"sound\",\n            phoneme: \"aʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /aʊ/ */\n    \"dawn-down\": {\n        left: {\n            id: \"dawn\",\n            label: \"dawn\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"down\",\n            label: \"down\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"moss-mouse\": {\n        left: {\n            id: \"moss\",\n            label: \"moss\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"mouse\",\n            label: \"mouse\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"brawn-brown\": {\n        left: {\n            id: \"brawn\",\n            label: \"brawn\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"brown\",\n            label: \"brown\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"ought-out\": {\n        left: {\n            id: \"ought\",\n            label: \"ought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"out\",\n            label: \"out\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"fall-foul\": {\n        left: {\n            id: \"fall\",\n            label: \"fall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"foul\",\n            label: \"foul\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"soar-sour\": {\n        left: {\n            id: \"soar\",\n            label: \"soar\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"sour\",\n            label: \"sour\",\n            phoneme: \"aʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /aʊ/ */\n    \"rot-route\": {\n        left: {\n            id: \"rot\",\n            label: \"rot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"route\",\n            label: \"route\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"pond-pound\": {\n        left: {\n            id: \"pond\",\n            label: \"pond\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"pound\",\n            label: \"pound\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"spot-spout\": {\n        left: {\n            id: \"spot\",\n            label: \"spot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"spout\",\n            label: \"spout\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"shot-shout\": {\n        left: {\n            id: \"shot\",\n            label: \"shot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"shout\",\n            label: \"shout\",\n            phoneme: \"aʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /aɪ/ */\n    \"mall-mile\": {\n        left: {\n            id: \"mall\",\n            label: \"mall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"mile\",\n            label: \"mile\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"fought-fight\": {\n        left: {\n            id: \"fought\",\n            label: \"fought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"fight\",\n            label: \"fight\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"wrought-right\": {\n        left: {\n            id: \"wrought\",\n            label: \"wrought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"right\",\n            label: \"right\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɪ/ vs /aɪ/ */\n    \"heat-height\": {\n        left: {\n            id: \"heat\",\n            label: \"heat\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"height\",\n            label: \"height\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /i:/ vs /aɪ/ */\n    \"ream-rhyme\": {\n        left: {\n            id: \"ream\",\n            label: \"ream\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"rhyme\",\n            label: \"rhyme\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"lead-lied\": {\n        left: {\n            id: \"to_lead\",\n            label: \"lead\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"lied\",\n            label: \"lied\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"flea-flye\": {\n        left: {\n            id: \"flea\",\n            label: \"flea\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"flye\",\n            label: \"flye\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"team-time\": {\n        left: {\n            id: \"team\",\n            label: \"team\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"time\",\n            label: \"time\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"read-ride\": {\n        left: {\n            id: \"read\",\n            label: \"read\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"ride\",\n            label: \"ride\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"creed-cried\": {\n        left: {\n            id: \"creed\",\n            label: \"creed\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"cried\",\n            label: \"cried\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /aɪ/ */\n    \"sat-sight\": {\n        left: {\n            id: \"sat\",\n            label: \"sat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"sight\",\n            label: \"sight\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"sad-sighed\": {\n        left: {\n            id: \"sad\",\n            label: \"sad\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"sighed\",\n            label: \"sighed\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n}\n\nconst OtherPairs: MinimalPairs = {\n    /* #region /b/ vs /v/ */\n    \"sybil-civil\": {\n        left: {\n            id: \"sybil\",\n            label: \"sybil\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"civil\",\n            label: \"civil\",\n            phoneme: \"v\"\n        }\n    },\n    \"bury-very\": {\n        left: {\n            id: \"bury\",\n            label: \"bury\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"very\",\n            label: \"very\",\n            phoneme: \"v\"\n        }\n    },\n    \"verb-verve\": {\n        left: {\n            id: \"verb\",\n            label: \"verb\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"verve\",\n            label: \"verve\",\n            phoneme: \"v\"\n        }\n    },\n    \"trouble-travel\": {\n        left: {\n            id: \"trouble\",\n            label: \"trouble\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"travel\",\n            label: \"travel\",\n            phoneme: \"v\"\n        }\n    },\n    \"saber-saver\": {\n        left: {\n            id: \"saber\",\n            label: \"saber\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"saver\",\n            label: \"saver\",\n            phoneme: \"v\"\n        }\n    },\n    /* #endregion */\n\n    // /d/ vs /ð/\n    \"day-they\": { // TODO: Improve audio\n        left: {\n            id: \"day\",\n            label: \"day\",\n            phoneme: \"d\"\n        },\n        right: {\n            id: \"they\",\n            label: \"they\",\n            phoneme: \"ð\"\n        }\n    },\n\n    // /s/ vs /ʃ/\n    \"sore-shore\": {\n        left: {\n            id: \"sore\",\n            label: \"sore\",\n            phoneme: \"s\"\n        },\n        right: {\n            id: \"shore\",\n            label: \"shore\",\n            phoneme: \"ʃ\"\n        }\n    },\n\n    // /ɑ/ vs /ʌ/\n\n    // /ʌ/ vs /æ/\n    \"tusk-task\": {\n        left: {\n            id: \"tusk\",\n            label: \"tusk\",\n            phoneme: \"ʌ\"\n        },\n        right: {\n            id: \"task\",\n            label: \"task\",\n            phoneme: \"æ\"\n        }\n    },\n    \"bluster-blaster\": {\n        left: {\n            id: \"bluster\",\n            label: \"bluster\",\n            phoneme: \"ʌ\"\n        },\n        right: {\n            id: \"blaster\",\n            label: \"blaster\",\n            phoneme: \"æ\"\n        }\n    },\n\n    // /ɪ/ vs /i:/\n    \"whistle-weasel\": {\n        left: {\n            id: \"whistle\",\n            label: \"whistle\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"weasel\",\n            label: \"weasel\",\n            phoneme: \"i:\"\n        }\n    },\n}\n\nconst Pairs: MinimalPairs = {\n    ...MasonPairs,\n    ...OtherPairs\n};\n\nexport default Pairs;","import React from 'react';\nimport { Col, Row, Checkbox } from 'antd';\n\ninterface PhonemeCheckGroupProps {\n    name: String,\n    phonemes: string[],\n    initialSelection: string[],\n    onChange: (selectedPhonemes: string[]) => void,\n}\n\ninterface PhonemeCheckGroupState {\n    selected: string[],\n    indeterminate: boolean,\n    all: boolean\n}\n\nclass PhonemeCheckGroup extends React.Component<PhonemeCheckGroupProps, PhonemeCheckGroupState> {\n    state = {\n        selected: this.props.initialSelection,\n        indeterminate: this.props.initialSelection.length > 0 && this.props.initialSelection.length < this.props.phonemes.length,\n        all: this.props.initialSelection.length === this.props.phonemes.length\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.props.initialSelection);\n    }\n\n    render() {\n        return <>\n            <Row gutter={[16, 16]}>\n                <Col offset={1} span={22}>\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        checked={this.state.all}\n                        onChange={e => {\n                            const selected = e.target.checked ? this.props.phonemes : [];\n                            this.setState({\n                                selected,\n                                indeterminate: false,\n                                all: e.target.checked,\n                            });\n                            this.props.onChange(selected);\n                        }}>\n                        <b>{this.props.name}</b>\n                    </Checkbox>\n                    <br />\n                    <Checkbox.Group\n                        options={this.props.phonemes.map(phoneme => ({\n                            label: `/${phoneme}/`,\n                            value: phoneme\n                        }))}\n                        value={this.state.selected}\n                        onChange={checkboxValues => {\n                            const selected = checkboxValues.flatMap(value => typeof value === \"string\" ? [value] : []);\n                            this.setState({\n                                selected,\n                                indeterminate: selected.length > 0 && selected.length < this.props.phonemes.length,\n                                all: selected.length === this.props.phonemes.length\n                            });\n                            this.props.onChange(selected);\n                        }}\n                    />\n                </Col>\n            </Row>\n\n\n        </>;\n    }\n}\n\nexport default PhonemeCheckGroup;\n","import React from 'react';\nimport { Button, Col, InputNumber, Row } from 'antd';\nimport Pairs from './pairs';\nimport PhonemeCheckGroup from './PhonemeCheckGroup';\n\ninterface SessionOptionsProps {\n    onComplete: (opts: { pairsToTrain: number, phonemePairIds: string[] }) => void,\n}\n\ninterface SessionOptionsState {\n    pairsToTrain: number,\n    selectedMonopthongs: string[],\n    selectedDitphthongs: string[],\n    selectedOtherPhonemes: string[],\n}\n\nclass SessionOptions extends React.Component<SessionOptionsProps, SessionOptionsState> {\n    state = {\n        pairsToTrain: Object.keys(Pairs).length,\n        selectedMonopthongs: [],\n        selectedDitphthongs: [],\n        selectedOtherPhonemes: [],\n    }\n\n    selectedPhonemes() {\n        const { selectedMonopthongs, selectedDitphthongs, selectedOtherPhonemes } = this.state;\n        return selectedMonopthongs.concat(selectedDitphthongs, selectedOtherPhonemes);\n    }\n\n    onComplete() {\n        const { pairsToTrain } = this.state;\n        const phonemePairIds = this.filterPairIdsBySelectedPhonemes(this.selectedPhonemes());\n        this.props.onComplete({ pairsToTrain, phonemePairIds });\n    }\n\n    filterPairIdsBySelectedPhonemes(selectedPhonemes: string[]): string[] {\n        return Object.entries(Pairs)\n            .filter(entry => {\n                const pair = entry[1];\n                return selectedPhonemes.includes(pair.left.phoneme) &&\n                    selectedPhonemes.includes(pair.right.phoneme);\n            })\n            .map(entry => entry[0]);\n    }\n\n    uniquePhonemes(): Array<{ phoneme: string, count: number }> {\n        const deduped: { [key: string]: { phoneme: string, count: number } } = {};\n        Object.values(Pairs).forEach(pair => {\n            const left = pair.left.phoneme;\n            const right = pair.right.phoneme;\n            [left, right].forEach(phoneme => {\n                if (deduped[phoneme]) {\n                    deduped[phoneme].count += 1;\n                } else {\n                    deduped[phoneme] = { phoneme, count: 1 };\n                }\n            });\n        });\n        return [...Object.values(deduped)];\n    }\n\n    render() {\n        const options = this.uniquePhonemes().map(entry =>\n            ({\n                label: `/${entry.phoneme}/`,\n                value: entry.phoneme\n            })\n        );\n        options.sort((l, r) => l.value.localeCompare(r.value));\n        const maxPairs = this.filterPairIdsBySelectedPhonemes(this.selectedPhonemes()).length;\n        const monopthongs = ['æ', 'ɑ', 'e', 'i:', 'ɪ', 'ɔ', 'u:', 'ʊ', 'ʌ'];\n        const diphthongs = ['aɪ', 'aʊ', 'oʊ'];\n        const otherPhonemes = this.uniquePhonemes()\n            .map(entry => entry.phoneme)\n            .filter(phoneme => monopthongs.indexOf(phoneme) < 0 && diphthongs.indexOf(phoneme) < 0)\n            .sort((l, r) => l.localeCompare(r));\n        \n        return <>\n            <Row gutter={[16, 16]} style={{ textAlign: \"left\" }}>\n                <Col span={12} style={{ textAlign: \"right\", lineHeight: \"32px\" }}>\n                    Pairs to train\n                </Col>\n                <Col span={12}>\n                    <InputNumber\n                        min={1}\n                        max={maxPairs}\n                        style={{ width: \"4em\" }}\n                        value={this.state.pairsToTrain}\n                        // TODO: handle undefined for this handler\n                        onChange={value => this.setState({ pairsToTrain: Math.max(value || maxPairs, 1) })}\n                    />\n                    &nbsp;\n                    / {maxPairs}\n                </Col>\n            </Row>\n\n            <PhonemeCheckGroup\n                name=\"Monopthongs\"\n                phonemes={monopthongs}\n                initialSelection={monopthongs}\n                onChange={selectedMonopthongs => { this.setState({ selectedMonopthongs }) }} />\n\n            <PhonemeCheckGroup\n                name=\"Diphthongs\"\n                phonemes={diphthongs}\n                initialSelection={[]}\n                onChange={selectedDitphthongs => { this.setState({ selectedDitphthongs }) }} />\n\n            <PhonemeCheckGroup\n                name=\"Other phonemes\"\n                phonemes={otherPhonemes}\n                initialSelection={otherPhonemes}\n                onChange={selectedOtherPhonemes => { this.setState({ selectedOtherPhonemes }) }} />\n\n            <Button\n                type=\"primary\"\n                onClick={this.onComplete.bind(this)}\n                disabled={maxPairs === 0}>\n                Start training\n            </Button>\n        </>;\n    }\n}\n\nexport default SessionOptions;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport SessionStats from './SessionStats';\nimport SessionOptions from './SessionOptions';\nimport Pairs from './pairs';\nimport { QuestionOutcome } from './model';\nimport QuizSession from './QuizSession';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction randomSubset<T>(array: T[], size: number) {\n  return array.map(value => ({ value, score: Math.random() }))\n    .sort((a, b) => a.score - b.score)\n    .slice(0, size)\n    .map(pair => pair.value);\n}\n\nenum Stage {\n  Configuring,\n  Quizzing,\n  Debriefing\n}\n\ntype ConfiguringState = {\n  stage: Stage.Configuring\n}\n\ntype QuizzingState = {\n  stage: Stage.Quizzing,\n  pairsToQuiz: string[]\n}\n\ntype DebriefingState = {\n  stage: Stage.Debriefing,\n  questionOutcomes: QuestionOutcome[],\n}\n\ntype AppState = ConfiguringState | QuizzingState | DebriefingState;\n\nclass App extends React.Component<{}, AppState> {\n  state: AppState = {\n    stage: Stage.Configuring\n  };\n\n  startQuizzing(options: { pairsToTrain: number, phonemePairIds: string[] }) {\n    this.setState({\n      stage: Stage.Quizzing,\n      pairsToQuiz: randomSubset(options.phonemePairIds, options.pairsToTrain),\n    });\n  }\n\n  finishQuizzing(questionOutcomes: QuestionOutcome[]) {\n    this.setState({\n      stage: Stage.Debriefing,\n      questionOutcomes\n    });\n  }\n\n  render() {\n    const { Header, Content, Footer } = Layout;\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Header><h1><img id=\"logo\" src=\"/minpairs.png\" alt=\"Minpairs logo\" />Minimal Pairs Trainer</h1></Header>\n          <Content className=\"site-layout\">\n            {\n              (this.state.stage === Stage.Quizzing) ?\n                <QuizSession pairsToQuiz={this.state.pairsToQuiz}\n                  onSessionComplete={outcomes => this.finishQuizzing(outcomes)} /> :\n                ((this.state.stage === Stage.Debriefing) ?\n                  this.renderStats(this.state.questionOutcomes) :\n                  <SessionOptions onComplete={this.startQuizzing.bind(this)}\n                  />)\n            }\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Work in progres by <a href=\"https://twitter.com/_sortega\">sortega</a></Footer>\n        </Layout>\n      </div>\n    );\n  }\n\n  renderStats(questionOutcomes: QuestionOutcome[]) {\n    return (<SessionStats\n      pairs={Pairs}\n      outcomes={questionOutcomes}\n      onDismiss={() => this.setState({ stage: Stage.Configuring })} />);\n  }\n}\n\nexport default App;\n","import React, { useCallback, useEffect } from 'react';\nimport { Button, Col, Row } from 'antd';\nimport Sound from 'react-sound';\n\nimport Pairs from './pairs';\nimport { Side, QuestionOutcome, Question } from './model';\n\ninterface QuizSessionProps {\n    pairsToQuiz: string[],\n    onSessionComplete(questionOutcomes: QuestionOutcome[]): void\n}\n\ninterface QuizSessionState {\n    activePairs: string[],\n    currentQuestion: Question,\n    questionOutcomes: QuestionOutcome[],\n    sound?: Side,\n    soundQueue: Side[]\n}\n\nclass QuizSession extends React.Component<QuizSessionProps, QuizSessionState> {\n    constructor(props: QuizSessionProps) {\n        super(props);\n        const currentQuestion = this.chooseNextQuestion(this.props.pairsToQuiz);\n        this.state = {\n            activePairs: this.props.pairsToQuiz,\n            currentQuestion,\n            questionOutcomes: [],\n            sound: currentQuestion.correctAnswer,\n            soundQueue: []\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"keydown\", this.keydownListener.bind(this), true);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this.keydownListener.bind(this), true);\n    }\n\n    keydownListener(event: KeyboardEvent) {\n        const { currentQuestion, sound } = this.state;\n        const { correctAnswer, actualAnswer } = currentQuestion;\n        switch (event.keyCode) {\n            case 37: // Left\n                if (actualAnswer) {\n                    sound || this.play(Side.Left);\n                } else {\n                    this.doAnswer(Side.Left);\n                }\n                break;\n            case 39: // Right\n                if (actualAnswer) { \n                    sound || this.play(Side.Right);\n                } else {\n                    this.doAnswer(Side.Right);\n                }\n                break;\n            case 32: // Space\n                if (actualAnswer) {\n                    sound || this.nextQuestion();\n                } else {\n                    sound || this.play(correctAnswer);\n                }\n        }\n    }\n\n    chooseNextQuestion(activePairs: string[]): Question {\n        const correctAnswer = (Math.random() < 0.5) ? Side.Left : Side.Right;\n        const index = Math.floor(Math.random() * activePairs.length);\n        return ({\n            pairId: activePairs[index],\n            correctAnswer,\n            actualAnswer: undefined,\n        });\n    }\n\n    play(side: Side) {\n        this.setState(state => {\n            return { ...state, sound: side, soundQueue: [] };\n        })\n    }\n\n    playNextSound = (state: QuizSessionState) => {\n        if (state.sound || state.soundQueue.length === 0) {\n            return state;\n        }\n        return ({\n            ...state,\n            sound: state.soundQueue[0],\n            soundQueue: state.soundQueue.slice(1)\n        });\n    }\n\n    onFinishSound() {\n        this.setState(state => {\n            return this.playNextSound({ ...state, sound: undefined });\n        });\n    }\n\n    doAnswer(actualAnswer: Side) {\n        this.setState(state => {\n            const currentQuestion = { ...state.currentQuestion, actualAnswer };\n            const questionOutcomes = [...state.questionOutcomes, currentQuestion];\n            const doneWithPair = this.areWeDoneWithPair(state.currentQuestion.pairId, questionOutcomes);\n            const activePairs = doneWithPair\n                ? state.activePairs.filter(pairId => !state.currentQuestion || pairId !== state.currentQuestion.pairId)\n                : state.activePairs;\n            return ({\n                ...state,\n                activePairs,\n                currentQuestion,\n                sound: actualAnswer,\n                soundQueue: (actualAnswer === Side.Right) ? [Side.Left] : [Side.Right],\n                questionOutcomes\n            });\n        })\n    }\n\n    nextQuestion() {\n        if (this.state.activePairs.length === 0) {\n            this.props.onSessionComplete(this.state.questionOutcomes)\n        } else {\n            this.setState(state => {\n                const { activePairs } = state;\n                const currentQuestion = this.chooseNextQuestion(activePairs);\n                return ({\n                    ...state,\n                    currentQuestion,\n                    sound: currentQuestion.correctAnswer,\n                    soundQueue: []\n                });\n            });\n        }\n    }\n\n    areWeDoneWithPair(pairId: string, questionOutcomes: QuestionOutcome[]) {\n        const outcomes = questionOutcomes\n            .filter(outcome => outcome.pairId === pairId)\n            .map(outcome => ({\n                right: outcome.correctAnswer === outcome.actualAnswer,\n                side: outcome.correctAnswer\n            }));\n        let streakSize = 0;\n        let lastRightSide = null;\n        for (let i = 0; i < outcomes.length; i++) {\n            if (outcomes[i].right) {\n                if (outcomes[i].side !== lastRightSide) {\n                    streakSize += 1;\n                    lastRightSide = outcomes[i].side;\n                }\n            } else {\n                streakSize = 0;\n                lastRightSide = null;\n            }\n        }\n        return streakSize >= 2;\n    }\n\n    render() {\n        const { sound, currentQuestion } = this.state;\n        const { pairId, correctAnswer, actualAnswer } = currentQuestion;\n        const pair = Pairs[pairId];\n\n        return (<div className=\"question-card\">\n            {this.renderSound()}\n            <p>Active pairs: {this.state.activePairs.length}</p>\n            <Row gutter={[16, 16]}>\n                <Col span={12}>\n                    <Button className=\"answer\"\n                        type={actualAnswer && (correctAnswer === Side.Left) ? \"primary\" : \"default\"}\n                        onClick={actualAnswer ? this.play.bind(this, Side.Left) : this.doAnswer.bind(this, Side.Left)}\n                        loading={!!(actualAnswer && sound === Side.Left)}\n                        danger={actualAnswer === Side.Left && actualAnswer !== correctAnswer}>\n                        {pair.left.label} /{pair.left.phoneme}/\n                    </Button>\n                </Col>\n                <Col span={12}>\n                    <Button className=\"answer\"\n                        type={actualAnswer && (correctAnswer === Side.Right) ? \"primary\" : \"default\"}\n                        onClick={actualAnswer ? this.play.bind(this, Side.Right) : this.doAnswer.bind(this, Side.Right)}\n                        loading={!!(actualAnswer && sound === Side.Right)}\n                        danger={actualAnswer === Side.Right && actualAnswer !== correctAnswer}>\n                        {pair.right.label} /{pair.right.phoneme}/\n                    </Button>\n                </Col>\n            </Row>\n            <Row gutter={[16, 16]}>\n                <Col span={24}>\n                    {\n                        actualAnswer\n                            ? <Button\n                                className=\"action\"\n                                onClick={this.nextQuestion.bind(this)}>\n                                {this.state.activePairs.length > 0 ? \"Next\" : \"Finish\"}\n                            </Button>\n                            : <Button\n                                className=\"action\"\n                                onClick={this.play.bind(this, correctAnswer)}\n                                loading={!!sound}>\n                                Replay\n                            </Button>\n                    }\n                </Col>\n            </Row>\n        </div>);\n    }\n\n    renderSound() {\n        const { sound, currentQuestion } = this.state;\n        if (!currentQuestion) {\n            return <></>;\n        }\n        const pairId = currentQuestion.pairId;\n        const soundId = sound ? Pairs[pairId][sound].id : null;\n        return (soundId\n            ? <Sound\n                url={`/sounds/${soundId}.mp3`}\n                playStatus={'PLAYING'}\n                onFinishedPlaying={this.onFinishSound.bind(this)} />\n            : <></>);\n    }\n}\n\nexport default QuizSession;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}