{"version":3,"sources":["SessionStats.tsx","model.ts","PhonemeCheckGroup.tsx","SessionOptions.tsx","pairs.ts","App.tsx","index.tsx"],"names":["SessionStats","Side","props","stats","outcomeSummary","Object","keys","map","label","successes","reps","failures","accuracy","toStats","outcomes","forEach","outcome","pair","pairs","pairId","left","phoneme","right","actualAnswer","correctAnswer","summarizeOutcomes","dataSource","columns","title","dataIndex","key","sorter","a","b","defaultSortOrder","render","toFixed","type","onClick","onDismiss","PhonemeCheckGroup","state","selected","initialSelection","indeterminate","length","phonemes","all","this","onChange","gutter","offset","span","checked","e","target","setState","name","Group","options","value","checkboxValues","flatMap","React","Component","SessionOptions","pairsToTrain","selectedMonopthongs","selectedDitphthongs","selectedOtherPhonemes","concat","phonemePairIds","filterPairIdsBySelectedPhonemes","selectedPhonemes","onComplete","entries","filter","entry","includes","deduped","values","count","uniquePhonemes","sort","l","r","localeCompare","maxPairs","monopthongs","diphthongs","otherPhonemes","indexOf","style","textAlign","lineHeight","min","max","width","bind","disabled","Pairs","id","Stage","App","stage","Configuring","playNextSound","Quizzing","sound","soundQueue","side","slice","array","size","activePairs","score","Math","random","questionOutcomes","nextQuestion","Left","Right","currentQuestion","floor","undefined","play","areWeDoneWithPair","Debriefing","streakSize","lastRightSide","i","Header","Layout","Content","Footer","className","src","alt","renderQuestion","renderStats","renderSelectTraining","href","startTraining","renderSound","doAnswer","loading","danger","soundId","soundUrl","url","playStatus","onFinishedPlaying","onFinishSound","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c6398bd.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Table } from 'antd';\nimport { MinimalPairs, QuestionOutcome } from './model';\nimport { ColumnsType } from 'antd/lib/table';\n\ninterface SessionStatsProps {\n    outcomes: QuestionOutcome[],\n    pairs: MinimalPairs\n    onDismiss: () => void\n}\n\ninterface Stat {\n    label: string,\n    reps: number,\n    accuracy: number,\n}\n\ninterface SessionStasState {\n    stats: Stat[],\n}\n\nfunction SessionStats(props: SessionStatsProps) {\n\n    const stats = toStats(summarizeOutcomes(props));\n\n    const columns: ColumnsType<Stat> = [\n        {\n            title: 'Pair',\n            dataIndex: 'label',\n            key: 'label',\n        },\n        {\n            title: 'Repetitions',\n            sorter: (a, b) => a.reps - b.reps,\n            dataIndex: 'reps',\n            key: 'reps',\n        },\n        {\n            title: 'Accuracy',\n            key: 'accuracy',\n            dataIndex: 'accuracy',\n            defaultSortOrder: 'ascend',\n            sorter: (a, b) => a.accuracy - b.accuracy,\n            render: (accuracy: number) => (accuracy * 100).toFixed(1) + \"%\",\n        },\n    ];\n\n    return (<>\n        <Table dataSource={stats} columns={columns} />\n        <Button type=\"primary\" onClick={props.onDismiss}>Dismiss</Button>\n    </>);\n}\n\nfunction summarizeOutcomes(props: SessionStatsProps) {\n    const outcomeSummary: { [key: string]: { successes: number, failures: number } } = {};\n    props.outcomes.forEach(outcome => {\n        const pair = props.pairs[outcome.pairId];\n        const label = `/${pair.left.phoneme}/ vs /${pair.right.phoneme}/`;\n        if (!outcomeSummary[label]) {\n            outcomeSummary[label] = { successes: 0, failures: 0 };\n        }\n        if (outcome.actualAnswer === outcome.correctAnswer) {\n            outcomeSummary[label].successes += 1;\n        }\n        else {\n            outcomeSummary[label].failures += 1;\n        }\n    });\n    return outcomeSummary;\n}\n\nfunction toStats(outcomeSummary: { [key: string]: { successes: number, failures: number } }): Stat[] {\n    return Object.keys(outcomeSummary)\n        .map(label => {\n            const { successes, failures } = outcomeSummary[label];\n            const reps = successes + failures;\n            const accuracy = successes / reps;\n            return ({ label, reps, accuracy });\n        });\n}\n\nexport default SessionStats;","export interface Phoneme {\n    id: string,\n    label: string,\n    phoneme: string\n}\n\nexport interface MinimalPair {\n    left: Phoneme,\n    right: Phoneme\n}\n\nexport interface MinimalPairs {\n    [key: string]: MinimalPair\n}\n\nexport enum Side {\n    Left = \"left\",\n    Right = \"right\"\n}\n\nexport interface Question {\n    pairId: string,\n    correctAnswer: Side,\n    actualAnswer?: Side\n}\n\nexport interface QuestionOutcome extends Question {\n    actualAnswer: Side\n}","import React from 'react';\nimport { Col, Row, Checkbox } from 'antd';\n\ninterface PhonemeCheckGroupProps {\n    name: String,\n    phonemes: string[],\n    initialSelection: string[],\n    onChange: (selectedPhonemes: string[]) => void,\n}\n\ninterface PhonemeCheckGroupState {\n    selected: string[],\n    indeterminate: boolean,\n    all: boolean\n}\n\nclass PhonemeCheckGroup extends React.Component<PhonemeCheckGroupProps, PhonemeCheckGroupState> {\n    state = {\n        selected: this.props.initialSelection,\n        indeterminate: this.props.initialSelection.length > 0 && this.props.initialSelection.length < this.props.phonemes.length,\n        all: this.props.initialSelection.length === this.props.phonemes.length\n    }\n\n    componentDidMount() {\n        this.props.onChange(this.props.initialSelection);\n    }\n\n    render() {\n        return <>\n            <Row gutter={[16, 16]}>\n                <Col offset={1} span={22}>\n                    <Checkbox\n                        indeterminate={this.state.indeterminate}\n                        checked={this.state.all}\n                        onChange={e => {\n                            const selected = e.target.checked ? this.props.phonemes : [];\n                            this.setState({\n                                selected,\n                                indeterminate: false,\n                                all: e.target.checked,\n                            });\n                            this.props.onChange(selected);\n                        }}>\n                        <b>{this.props.name}</b>\n                    </Checkbox>\n                    <br />\n                    <Checkbox.Group\n                        options={this.props.phonemes.map(phoneme => ({\n                            label: `/${phoneme}/`,\n                            value: phoneme\n                        }))}\n                        value={this.state.selected}\n                        onChange={checkboxValues => {\n                            const selected = checkboxValues.flatMap(value => typeof value === \"string\" ? [value] : []);\n                            this.setState({\n                                selected,\n                                indeterminate: selected.length > 0 && selected.length < this.props.phonemes.length,\n                                all: selected.length === this.props.phonemes.length\n                            });\n                            this.props.onChange(selected);\n                        }}\n                    />\n                </Col>\n            </Row>\n\n\n        </>;\n    }\n}\n\nexport default PhonemeCheckGroup;\n","import React from 'react';\nimport { Button, Col, InputNumber, Row } from 'antd';\nimport { MinimalPairs } from './model';\nimport PhonemeCheckGroup from './PhonemeCheckGroup';\n\ninterface SessionOptionsProps {\n    pairs: MinimalPairs,\n    onComplete: (opts: { pairsToTrain: number, phonemePairIds: string[] }) => void,\n}\n\ninterface SessionOptionsState {\n    pairsToTrain: number,\n    selectedMonopthongs: string[],\n    selectedDitphthongs: string[],\n    selectedOtherPhonemes: string[],\n}\n\nclass SessionOptions extends React.Component<SessionOptionsProps, SessionOptionsState> {\n    state = {\n        pairsToTrain: Object.keys(this.props.pairs).length,\n        selectedMonopthongs: [],\n        selectedDitphthongs: [],\n        selectedOtherPhonemes: [],\n    }\n\n    selectedPhonemes() {\n        const { selectedMonopthongs, selectedDitphthongs, selectedOtherPhonemes } = this.state;\n        return selectedMonopthongs.concat(selectedDitphthongs, selectedOtherPhonemes)\n    }\n\n    onComplete() {\n        const { pairsToTrain } = this.state;\n        const phonemePairIds = this.filterPairIdsBySelectedPhonemes(this.selectedPhonemes());\n        this.props.onComplete({ pairsToTrain, phonemePairIds });\n    }\n\n    filterPairIdsBySelectedPhonemes(selectedPhonemes: string[]): string[] {\n        return Object.entries(this.props.pairs)\n            .filter(entry => {\n                const pair = entry[1];\n                return selectedPhonemes.includes(pair.left.phoneme) &&\n                    selectedPhonemes.includes(pair.right.phoneme);\n            })\n            .map(entry => entry[0]);\n    }\n\n    uniquePhonemes(): Array<{ phoneme: string, count: number }> {\n        const deduped: { [key: string]: { phoneme: string, count: number } } = {};\n        Object.values(this.props.pairs).forEach(pair => {\n            const left = pair.left.phoneme;\n            const right = pair.right.phoneme;\n            [left, right].forEach(phoneme => {\n                if (deduped[phoneme]) {\n                    deduped[phoneme].count += 1;\n                } else {\n                    deduped[phoneme] = { phoneme, count: 1 };\n                }\n            });\n        });\n        return [...Object.values(deduped)];\n    }\n\n    render() {\n        const options = this.uniquePhonemes().map(entry =>\n            ({\n                label: `/${entry.phoneme}/`,\n                value: entry.phoneme\n            })\n        );\n        options.sort((l, r) => l.value.localeCompare(r.value));\n        const maxPairs = this.filterPairIdsBySelectedPhonemes(this.selectedPhonemes()).length;\n        const monopthongs = ['æ', 'ɑ', 'e', 'i:', 'ɪ', 'ɔ', 'u:', 'ʊ', 'ʌ'];\n        const diphthongs = ['aɪ', 'aʊ', 'oʊ'];\n        const otherPhonemes = this.uniquePhonemes()\n            .map(entry => entry.phoneme)\n            .filter(phoneme => monopthongs.indexOf(phoneme) < 0 && diphthongs.indexOf(phoneme) < 0)\n            .sort((l, r) => l.localeCompare(r))\n\n        return <>\n            <Row gutter={[16, 16]} style={{ textAlign: \"left\" }}>\n                <Col span={12} style={{ textAlign: \"right\", lineHeight: \"32px\" }}>\n                    Pairs to train\n                </Col>\n                <Col span={12}>\n                    <InputNumber\n                        min={1}\n                        max={maxPairs}\n                        style={{ width: \"4em\" }}\n                        value={this.state.pairsToTrain}\n                        // TODO: handle undefined for this handler\n                        onChange={value => this.setState({ pairsToTrain: value || maxPairs })}\n                    />\n                    &nbsp;\n                    / {maxPairs}\n                </Col>\n            </Row>\n\n            <PhonemeCheckGroup\n                name=\"Monopthongs\"\n                phonemes={monopthongs}\n                initialSelection={monopthongs}\n                onChange={selectedMonopthongs => { this.setState({ selectedMonopthongs }) }} />\n\n            <PhonemeCheckGroup\n                name=\"Diphthongs\"\n                phonemes={diphthongs}\n                initialSelection={[]}\n                onChange={e => { }} />\n\n            <PhonemeCheckGroup\n                name=\"Other phonemes\"\n                phonemes={otherPhonemes}\n                initialSelection={otherPhonemes}\n                onChange={e => { }} />\n\n            <Button\n                type=\"primary\"\n                onClick={this.onComplete.bind(this)}\n                disabled={this.selectedPhonemes().length === 0}>\n                Start training\n            </Button>\n        </>;\n    }\n}\n\nexport default SessionOptions;\n","import { MinimalPairs } from './model';\n\nconst MasonPairs: MinimalPairs = {\n    /* #region /ɪ/ vs /i:/ */\n    \"shit-sheet\": {\n        left: {\n            id: \"shit\",\n            label: \"shit\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"sheet\",\n            label: \"sheet\",\n            phoneme: \"i:\"\n        }\n    },\n    \"lip-leap\": {\n        left: {\n            id: \"lip\",\n            label: \"lip\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"leap\",\n            label: \"leap\",\n            phoneme: \"i:\"\n        }\n    },\n    \"rich-reach\": {\n        left: {\n            id: \"rich\",\n            label: \"rich\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"reach\",\n            label: \"reach\",\n            phoneme: \"i:\"\n        }\n    },\n    \"still-steal\": {\n        left: {\n            id: \"still\",\n            label: \"still\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"steal\",\n            label: \"steal\",\n            phoneme: \"i:\"\n        }\n    },\n    \"fist-feast\": {\n        left: {\n            id: \"fist\",\n            label: \"fist\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"feast\",\n            label: \"feast\",\n            phoneme: \"i:\"\n        }\n    },\n    \"fit-feet\": {\n        left: {\n            id: \"fit\",\n            label: \"fit\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"feet\",\n            label: \"feet\",\n            phoneme: \"i:\"\n        }\n    },\n    \"slip-sleep\": {\n        left: {\n            id: \"slip\",\n            label: \"slip\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"sleep\",\n            label: \"sleep\",\n            phoneme: \"i:\"\n        }\n    },\n    \"sin-seen\": {\n        left: {\n            id: \"sin\",\n            label: \"sin\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"seen\",\n            label: \"seen\",\n            phoneme: \"i:\"\n        }\n    },\n    \"lick-leak\": {\n        left: {\n            id: \"lick\",\n            label: \"lick\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"leak\",\n            label: \"leak\",\n            phoneme: \"i:\"\n        }\n    },\n    \"pill-peal\": {\n        left: {\n            id: \"pill\",\n            label: \"pill\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"peal\",\n            label: \"peal\",\n            phoneme: \"i:\"\n        }\n    },\n    \"gin-gene\": {\n        left: {\n            id: \"gin\",\n            label: \"gin\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"gene\",\n            label: \"gene\",\n            phoneme: \"i:\"\n        }\n    },\n    \"pick-peak\": {\n        left: {\n            id: \"pick\",\n            label: \"pick\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"peak\",\n            label: \"peak\",\n            phoneme: \"i:\"\n        }\n    },\n    \"rip-reap\": {\n        left: {\n            id: \"rip\",\n            label: \"rip\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"reap\",\n            label: \"reap\",\n            phoneme: \"i:\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /ʌ/ */\n    \"got-gut\": {\n        left: {\n            id: \"got\",\n            label: \"got\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"gut\",\n            label: \"gut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"pot-put\": {\n        left: {\n            id: \"pot\",\n            label: \"pot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"put\",\n            label: \"put\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"watt-what\": {\n        left: {\n            id: \"watt\",\n            label: \"watt\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"what\",\n            label: \"what\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"sock-suck\": {\n        left: {\n            id: \"sock\",\n            label: \"sock\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"suck\",\n            label: \"suck\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"shot-shut\": {\n        left: {\n            id: \"shot\",\n            label: \"shot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"shut\",\n            label: \"shut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"hot-hut\": {\n        left: {\n            id: \"hot\",\n            label: \"hot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"hut\",\n            label: \"hut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"rob-rub\": {\n        left: {\n            id: \"rob\",\n            label: \"rob\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"rub\",\n            label: \"rub\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"rot-rut\": {\n        left: {\n            id: \"rot\",\n            label: \"rot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"rut\",\n            label: \"rut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"not-nut\": {\n        left: {\n            id: \"not\",\n            label: \"not\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"nut\",\n            label: \"nut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /æ/ */\n    \"top-tap\": {\n        left: {\n            id: \"top\",\n            label: \"top\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"tap\",\n            label: \"tap\",\n            phoneme: \"æ\"\n        }\n    },\n    \"hot-hat\": {\n        left: {\n            id: \"hot\",\n            label: \"hot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"hat\",\n            label: \"hat\",\n            phoneme: \"æ\"\n        }\n    },\n    \"rock-rack\": {\n        left: {\n            id: \"rock\",\n            label: \"rock\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"rack\",\n            label: \"rack\",\n            phoneme: \"æ\"\n        }\n    },\n    \"bog-bag\": {\n        left: {\n            id: \"bog\",\n            label: \"bog\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"bag\",\n            label: \"bag\",\n            phoneme: \"æ\"\n        }\n    },\n    \"fog-fag\": {\n        left: {\n            id: \"fog\",\n            label: \"fog\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"fag\",\n            label: \"fag\",\n            phoneme: \"æ\"\n        }\n    },\n    \"gob-gab\": {\n        left: {\n            id: \"gob\",\n            label: \"gob\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"gab\",\n            label: \"gab\",\n            phoneme: \"æ\"\n        }\n    },\n    \"mop-map\": {\n        left: {\n            id: \"mop\",\n            label: \"mop\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"map\",\n            label: \"map\",\n            phoneme: \"æ\"\n        }\n    },\n    \"sock-sack\": {\n        left: {\n            id: \"sock\",\n            label: \"sock\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"sack\",\n            label: \"sack\",\n            phoneme: \"æ\"\n        }\n    },\n    \"lost-last\": {\n        left: {\n            id: \"lost\",\n            label: \"lost\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"last\",\n            label: \"last\",\n            phoneme: \"æ\"\n        }\n    },\n    \"pot-pat\": {\n        left: {\n            id: \"pot\",\n            label: \"pot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"pat\",\n            label: \"pat\",\n            phoneme: \"æ\"\n        }\n    },\n    \"flop-flap\": {\n        left: {\n            id: \"flop\",\n            label: \"flop\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"flap\",\n            label: \"flap\",\n            phoneme: \"æ\"\n        }\n    },\n    \"lob-lab\": {\n        left: {\n            id: \"lob\",\n            label: \"lob\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"lab\",\n            label: \"lab\",\n            phoneme: \"æ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /e/ */\n    \"bat-bet\": {\n        left: {\n            id: \"bat\",\n            label: \"bat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"bet\",\n            label: \"bet\",\n            phoneme: \"e\"\n        }\n    },\n    \"sad-said\": {\n        left: {\n            id: \"sad\",\n            label: \"sad\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"said\",\n            label: \"said\",\n            phoneme: \"e\"\n        }\n    },\n    \"had-head\": {\n        left: {\n            id: \"had\",\n            label: \"had\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"head\",\n            label: \"head\",\n            phoneme: \"e\"\n        }\n    },\n    \"cattle-kettle\": {\n        left: {\n            id: \"cattle\",\n            label: \"cattle\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"kettle\",\n            label: \"kettle\",\n            phoneme: \"e\"\n        }\n    },\n    \"lad-lead\": {\n        left: {\n            id: \"lad\",\n            label: \"lad\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"lead\",\n            label: \"lead\",\n            phoneme: \"e\"\n        }\n    },\n    \"gas-guess\": {\n        left: {\n            id: \"gas\",\n            label: \"gas\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"guess\",\n            label: \"guess\",\n            phoneme: \"e\"\n        }\n    },\n    \"slapped-slept\": {\n        left: {\n            id: \"slapped\",\n            label: \"slapped\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"slept\",\n            label: \"slept\",\n            phoneme: \"e\"\n        }\n    },\n    \"past-pest\": {\n        left: {\n            id: \"past\",\n            label: \"past\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"pest\",\n            label: \"pest\",\n            phoneme: \"e\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ʊ/ vs /u:/ */\n    \"stood-stewed\": {\n        left: {\n            id: \"stood\",\n            label: \"stood\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"stewed\",\n            label: \"stewed\",\n            phoneme: \"u:\"\n        },\n    },\n    \"look-luke\": {\n        left: {\n            id: \"look\",\n            label: \"look\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"luke\",\n            label: \"luke\",\n            phoneme: \"u:\"\n        },\n    },\n    \"wood-wooed\": {\n        left: {\n            id: \"wood\",\n            label: \"wood\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"wooed\",\n            label: \"wooed\",\n            phoneme: \"u:\"\n        },\n    },\n    \"pull-pool\": {\n        left: {\n            id: \"pull\",\n            label: \"pull\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"pool\",\n            label: \"pool\",\n            phoneme: \"u:\"\n        },\n    },\n    \"soot-suit\": {\n        left: {\n            id: \"soot\",\n            label: \"soot\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"suit\",\n            label: \"suit\",\n            phoneme: \"u:\"\n        },\n    },\n    \"cookie-kooky\": {\n        left: {\n            id: \"cookie\",\n            label: \"cookie\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"kooky\",\n            label: \"kooky\",\n            phoneme: \"u:\"\n        },\n    },\n    \"toll-tool\": {\n        left: {\n            id: \"toll\",\n            label: \"toll\",\n            phoneme: \"ʊ\"\n        },\n        right: {\n            id: \"tool\",\n            label: \"tool\",\n            phoneme: \"u:\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /oʊ/ */\n    \"ram-roam\": {\n        left: {\n            id: \"ram\",\n            label: \"ram\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"roam\",\n            label: \"roam\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"bat-boat\": {\n        left: {\n            id: \"bat2\",\n            label: \"bat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"boat\",\n            label: \"boat\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"ham-home\": {\n        left: {\n            id: \"ham\",\n            label: \"ham\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"home\",\n            label: \"home\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"sack-soak\": {\n        left: {\n            id: \"sack2\",\n            label: \"sack\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"soak\",\n            label: \"soak\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"cat-coat\": {\n        left: {\n            id: \"cat2\",\n            label: \"cat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"coat\",\n            label: \"coat\",\n            phoneme: \"oʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /oʊ/ */\n    \"nod-node\": {\n        left: {\n            id: \"nod\",\n            label: \"nod\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"node\",\n            label: \"node\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"mop-mope\": {\n        left: {\n            id: \"mop2\",\n            label: \"mop\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"mope\",\n            label: \"mope\",\n            phoneme: \"oʊ\"\n        }\n    },\n    \"cod-code\": {\n        left: {\n            id: \"cod\",\n            label: \"cod\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"code\",\n            label: \"code\",\n            phoneme: \"oʊ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /ʌ/ */\n    \"bought-but\": {\n        left: {\n            id: \"bought\",\n            label: \"bought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"but\",\n            label: \"but\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"hall-hull\": {\n        left: {\n            id: \"hall\",\n            label: \"hall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"hull\",\n            label: \"hull\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"caught-cut\": {\n        left: {\n            id: \"caught\",\n            label: \"caught\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"cut\",\n            label: \"cut\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"daughter-dutter\": {\n        left: {\n            id: \"daughter\",\n            label: \"daughter\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"dutter\",\n            label: \"dutter\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"fall-full\": {\n        left: {\n            id: \"fall\",\n            label: \"fall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"full\",\n            label: \"full\",\n            phoneme: \"ʌ\"\n        }\n    },\n    \"mall-mull\": {\n        left: {\n            id: \"mall\",\n            label: \"mall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"mull\",\n            label: \"mull\",\n            phoneme: \"ʌ\"\n        },\n    },\n    \"gall-gull\": {\n        left: {\n            id: \"gall\",\n            label: \"gall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"gull\",\n            label: \"gull\",\n            phoneme: \"ʌ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /oʊ/ */\n    \"ball-bowl\": {\n        left: {\n            id: \"ball\",\n            label: \"ball\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"bowl\",\n            label: \"bowl\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"wrought-wrote\": {\n        left: {\n            id: \"wrought\",\n            label: \"wrought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"wrote\",\n            label: \"wrote\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"raw-row\": {\n        left: {\n            id: \"raw\",\n            label: \"raw\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"row\",\n            label: \"row\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"law-load\": {\n        left: {\n            id: \"law\",\n            label: \"law\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"load\",\n            label: \"load\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"called-cold\": {\n        left: {\n            id: \"called\",\n            label: \"called\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"cold\",\n            label: \"cold\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"ought-oat\": {\n        left: {\n            id: \"ought\",\n            label: \"ought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"oat\",\n            label: \"oat\",\n            phoneme: \"oʊ\"\n        },\n    },\n    \"tall-toll\": {\n        left: {\n            id: \"tall\",\n            label: \"tall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"toll\",\n            label: \"toll\",\n            phoneme: \"oʊ\"\n        }\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /aʊ/ */\n    \"sand-sound\": {\n        left: {\n            id: \"sand\",\n            label: \"sand\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"sound\",\n            label: \"sound\",\n            phoneme: \"aʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /aʊ/ */\n    \"dawn-down\": {\n        left: {\n            id: \"dawn\",\n            label: \"dawn\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"down\",\n            label: \"down\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"moss-mouse\": {\n        left: {\n            id: \"moss\",\n            label: \"moss\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"mouse\",\n            label: \"mouse\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"brawn-brown\": {\n        left: {\n            id: \"brawn\",\n            label: \"brawn\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"brown\",\n            label: \"brown\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"ought-out\": {\n        left: {\n            id: \"ought\",\n            label: \"ought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"out\",\n            label: \"out\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"fall-foul\": {\n        left: {\n            id: \"fall\",\n            label: \"fall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"foul\",\n            label: \"foul\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"soar-sour\": {\n        left: {\n            id: \"soar\",\n            label: \"soar\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"sour\",\n            label: \"sour\",\n            phoneme: \"aʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɑ/ vs /aʊ/ */\n    \"rot-route\": {\n        left: {\n            id: \"rot\",\n            label: \"rot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"route\",\n            label: \"route\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"pond-pound\": {\n        left: {\n            id: \"pond\",\n            label: \"pond\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"pound\",\n            label: \"pound\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"spot-spout\": {\n        left: {\n            id: \"spot\",\n            label: \"spot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"spout\",\n            label: \"spout\",\n            phoneme: \"aʊ\"\n        },\n    },\n    \"shot-shout\": {\n        left: {\n            id: \"shot\",\n            label: \"shot\",\n            phoneme: \"ɑ\"\n        },\n        right: {\n            id: \"shout\",\n            label: \"shout\",\n            phoneme: \"aʊ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɔ/ vs /aɪ/ */\n    \"mall-mile\": {\n        left: {\n            id: \"mall\",\n            label: \"mall\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"mile\",\n            label: \"mile\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"fought-fight\": {\n        left: {\n            id: \"fought\",\n            label: \"fought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"fight\",\n            label: \"fight\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"wrought-right\": {\n        left: {\n            id: \"wrought\",\n            label: \"wrought\",\n            phoneme: \"ɔ\"\n        },\n        right: {\n            id: \"right\",\n            label: \"right\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /ɪ/ vs /aɪ/ */\n    \"heat-height\": {\n        left: {\n            id: \"heat\",\n            label: \"heat\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"height\",\n            label: \"height\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /i:/ vs /aɪ/ */\n    \"ream-rhyme\": {\n        left: {\n            id: \"ream\",\n            label: \"ream\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"rhyme\",\n            label: \"rhyme\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"lead-lied\": {\n        left: {\n            id: \"to_lead\",\n            label: \"lead\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"lied\",\n            label: \"lied\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"flea-flye\": {\n        left: {\n            id: \"flea\",\n            label: \"flea\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"flye\",\n            label: \"flye\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"team-time\": {\n        left: {\n            id: \"team\",\n            label: \"team\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"time\",\n            label: \"time\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"read-ride\": {\n        left: {\n            id: \"read\",\n            label: \"read\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"ride\",\n            label: \"ride\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"creed-cried\": {\n        left: {\n            id: \"creed\",\n            label: \"creed\",\n            phoneme: \"i:\"\n        },\n        right: {\n            id: \"cried\",\n            label: \"cried\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n\n    /* #region /æ/ vs /aɪ/ */\n    \"sat-sight\": {\n        left: {\n            id: \"sat\",\n            label: \"sat\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"sight\",\n            label: \"sight\",\n            phoneme: \"aɪ\"\n        },\n    },\n    \"sad-sighed\": {\n        left: {\n            id: \"sad\",\n            label: \"sad\",\n            phoneme: \"æ\"\n        },\n        right: {\n            id: \"sighed\",\n            label: \"sighed\",\n            phoneme: \"aɪ\"\n        },\n    },\n    /* #endregion */\n}\n\nconst OtherPairs: MinimalPairs = {\n    /* #region /b/ vs /v/ */\n    \"sybil-civil\": {\n        left: {\n            id: \"sybil\",\n            label: \"sybil\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"civil\",\n            label: \"civil\",\n            phoneme: \"v\"\n        }\n    },\n    \"bury-very\": {\n        left: {\n            id: \"bury\",\n            label: \"bury\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"very\",\n            label: \"very\",\n            phoneme: \"v\"\n        }\n    },\n    \"verb-verve\": {\n        left: {\n            id: \"verb\",\n            label: \"verb\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"verve\",\n            label: \"verve\",\n            phoneme: \"v\"\n        }\n    },\n    \"trouble-travel\": {\n        left: {\n            id: \"trouble\",\n            label: \"trouble\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"travel\",\n            label: \"travel\",\n            phoneme: \"v\"\n        }\n    },\n    \"saber-saver\": {\n        left: {\n            id: \"saber\",\n            label: \"saber\",\n            phoneme: \"b\"\n        },\n        right: {\n            id: \"saver\",\n            label: \"saver\",\n            phoneme: \"v\"\n        }\n    },\n    /* #endregion */\n\n    // /d/ vs /ð/\n    \"day-they\": { // TODO: Improve audio\n        left: {\n            id: \"day\",\n            label: \"day\",\n            phoneme: \"d\"\n        },\n        right: {\n            id: \"they\",\n            label: \"they\",\n            phoneme: \"ð\"\n        }\n    },\n\n    // /s/ vs /ʃ/\n    \"sore-shore\": {\n        left: {\n            id: \"sore\",\n            label: \"sore\",\n            phoneme: \"s\"\n        },\n        right: {\n            id: \"shore\",\n            label: \"shore\",\n            phoneme: \"ʃ\"\n        }\n    },\n\n    // /ɑ/ vs /ʌ/\n\n    // /ʌ/ vs /æ/\n    \"tusk-task\": {\n        left: {\n            id: \"tusk\",\n            label: \"tusk\",\n            phoneme: \"ʌ\"\n        },\n        right: {\n            id: \"task\",\n            label: \"task\",\n            phoneme: \"æ\"\n        }\n    },\n    \"bluster-blaster\": {\n        left: {\n            id: \"bluster\",\n            label: \"bluster\",\n            phoneme: \"ʌ\"\n        },\n        right: {\n            id: \"blaster\",\n            label: \"blaster\",\n            phoneme: \"æ\"\n        }\n    },\n\n    // /ɪ/ vs /i:/\n    \"whistle-weasel\": {\n        left: {\n            id: \"whistle\",\n            label: \"whistle\",\n            phoneme: \"ɪ\"\n        },\n        right: {\n            id: \"weasel\",\n            label: \"weasel\",\n            phoneme: \"i:\"\n        }\n    },\n}\n\nconst Pairs: MinimalPairs = {\n    ...MasonPairs,\n    ...OtherPairs\n};\n\nexport default Pairs;","import React from 'react';\nimport { Button, Col, Layout, Row } from 'antd';\nimport Sound from 'react-sound';\n\nimport SessionStats from './SessionStats';\nimport SessionOptions from './SessionOptions';\nimport Pairs from './pairs';\nimport { Side, QuestionOutcome, Question } from './model';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction randomSubset<T>(array: T[], size: number) {\n  return array.map(value => ({ value, score: Math.random() }))\n    .sort((a, b) => a.score - b.score)\n    .slice(0, size).map(pair => pair.value);\n}\n\nenum Stage {\n  Configuring,\n  Quizzing,\n  Debriefing\n}\n\ntype ConfiguringState = {\n  stage: Stage.Configuring\n}\n\ntype QuizzingState = {\n  stage: Stage.Quizzing,\n  activePairs: string[],\n  currentQuestion: Question,\n  questionOutcomes: QuestionOutcome[],\n  sound?: Side,\n  soundQueue: Side[],\n}\n\ntype DebriefingState = {\n  stage: Stage.Debriefing,\n  questionOutcomes: QuestionOutcome[],\n}\n\ntype AppState = ConfiguringState | QuizzingState | DebriefingState;\n\nclass App extends React.Component<{}, AppState> {\n  state: AppState = {\n    stage: Stage.Configuring\n  };\n\n  startTraining(options: { pairsToTrain: number, phonemePairIds: string[] }) {\n    this.setState({\n      stage: Stage.Quizzing,\n      activePairs: randomSubset(options.phonemePairIds, options.pairsToTrain),\n      questionOutcomes: [],\n      soundQueue: []\n    });\n    this.nextQuestion();\n  }\n\n  nextQuestion() {\n    const correctAnswer = (Math.random() < 0.5) ? Side.Left : Side.Right;\n    this.setState(state => {\n      if (state.stage !== Stage.Quizzing) {\n        return state; // This guard should not be needed\n      }\n      const { activePairs } = state;\n      const pairId = activePairs[Math.floor(Math.random() * activePairs.length)]\n      const currentQuestion = {\n        pairId,\n        correctAnswer,\n        actualAnswer: undefined,\n      };\n      return ({\n        ...state,\n        currentQuestion,\n        sound: undefined,\n        soundQueue: []\n      });\n    });\n    this.play(correctAnswer);\n  }\n\n  doAnswer(actualAnswer: Side) {\n    this.setState(state => {\n      if (state.stage !== Stage.Quizzing) {\n        return state; // This guard should not be needed\n      }\n      const currentQuestion = { ...state.currentQuestion, actualAnswer };\n      const questionOutcomes = [...state.questionOutcomes, currentQuestion];\n      const doneWithPair = this.areWeDoneWithPair(state.currentQuestion.pairId, questionOutcomes);\n      const activePairs = doneWithPair \n        ? state.activePairs.filter(pairId => !state.currentQuestion || pairId !== state.currentQuestion.pairId) \n        : state.activePairs;\n      return (activePairs.length > 0) ? {\n        ...state,\n        activePairs,\n        currentQuestion,\n        sound: undefined,\n        questionOutcomes\n      } : { stage: Stage.Debriefing };\n    })\n    this.play(actualAnswer);\n    this.play(actualAnswer === Side.Right ? Side.Left : Side.Right);\n  }\n\n  areWeDoneWithPair(pairId: string, questionOutcomes: QuestionOutcome[]) {\n    const outcomes = questionOutcomes\n      .filter(outcome => outcome.pairId === pairId)\n      .map(outcome => ({\n        right: outcome.correctAnswer === outcome.actualAnswer,\n        side: outcome.correctAnswer\n      }));\n    let streakSize = 0;\n    let lastRightSide = null;\n    for (let i = 0; i < outcomes.length; i++) {\n      if (outcomes[i].right) {\n        if (outcomes[i].side !== lastRightSide) {\n          streakSize += 1;\n          lastRightSide = outcomes[i].side;\n        }\n      } else {\n        streakSize = 0;\n        lastRightSide = null;\n      }\n    }\n    return streakSize >= 2;\n  }\n\n  playNextSound = (state: AppState) => {\n    if (state.stage !== Stage.Quizzing) {\n      return state; // This guard should not be needed\n    }\n    if (state.sound || state.soundQueue.length === 0) {\n      return state;\n    }\n    const side = state.soundQueue[0];\n    return { ...state, sound: side, soundQueue: state.soundQueue.slice(1) };\n  }\n\n  onFinishSound() {\n    this.setState(state => {\n      if (state.stage !== Stage.Quizzing) {\n        return state; // This guard should not be needed\n      }\n      return this.playNextSound({ ...state, sound: undefined });\n    });\n  }\n\n  play(side: Side) {\n    this.setState(state => {\n      if (state.stage !== Stage.Quizzing) {\n        return state; // This guard should not be needed\n      }\n      return this.playNextSound({ ...state, soundQueue: [...state.soundQueue, side] });\n    })\n  }\n\n  render() {\n    const { Header, Content, Footer } = Layout;\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Header><h1><img id=\"logo\" src=\"/minpairs.png\" alt=\"Minpairs logo\" />Minimal Pairs Trainer</h1></Header>\n          <Content className=\"site-layout\">\n            {\n              (this.state.stage === Stage.Quizzing) ?\n              this.renderQuestion(this.state) :\n                ((this.state.stage === Stage.Debriefing) ?\n                  this.renderStats(this.state.questionOutcomes) :\n                  this.renderSelectTraining())\n            }\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Work in progres by <a href=\"https://twitter.com/_sortega\">sortega</a></Footer>\n        </Layout>\n      </div>\n    );\n  }\n\n  renderSelectTraining() {\n    return (<SessionOptions\n      pairs={Pairs}\n      onComplete={this.startTraining.bind(this)}\n    />);\n  }\n\n  renderQuestion(state: QuizzingState) {\n    const { sound, currentQuestion } = state;\n    if (!currentQuestion) {\n      return <></>;\n    }\n    const { pairId, correctAnswer, actualAnswer } = currentQuestion;\n    const pair = Pairs[pairId];\n\n    return (<div className=\"question-card\">\n      {this.renderSound(state)}\n      <p>Active pairs: {state.activePairs.length}</p>\n      <Row gutter={[16, 16]}>\n        <Col span={12}>\n          <Button className=\"answer\"\n            type={actualAnswer && (correctAnswer === Side.Left) ? \"primary\" : \"default\"}\n            onClick={(actualAnswer ? this.play : this.doAnswer).bind(this, Side.Left)}\n            loading={!!(actualAnswer && sound === Side.Left)}\n            danger={actualAnswer === Side.Left && actualAnswer !== correctAnswer}>\n            {pair.left.label} /{pair.left.phoneme}/\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button className=\"answer\"\n            type={actualAnswer && (correctAnswer === Side.Right) ? \"primary\" : \"default\"}\n            onClick={(actualAnswer ? this.play : this.doAnswer).bind(this, Side.Right)}\n            loading={!!(actualAnswer && sound === Side.Right)}\n            danger={actualAnswer === Side.Right && actualAnswer !== correctAnswer}>\n            {pair.right.label} /{pair.right.phoneme}/\n          </Button>\n        </Col>\n      </Row>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          {\n            actualAnswer\n              ? <Button\n                className=\"action\"\n                onClick={this.nextQuestion.bind(this)}>\n                Next\n                </Button>\n              : <Button\n                className=\"action\"\n                onClick={this.play.bind(this, correctAnswer)}\n                loading={!!sound}>\n                Replay\n              </Button>\n          }\n        </Col>\n      </Row>\n    </div>);\n  }\n\n  renderSound(state: QuizzingState) {\n    const { sound, currentQuestion } = state;\n    if (!currentQuestion) {\n      return <></>;\n    }\n    const pairId = currentQuestion.pairId;\n    const soundId = sound ? Pairs[pairId][sound].id : null;\n    const soundUrl = `/sounds/${soundId}.mp3`;\n    return (<Sound\n      url={soundUrl}\n      playStatus={soundId ? 'PLAYING' : 'STOPPED'}\n      onFinishedPlaying={this.onFinishSound.bind(this)}\n    />);\n  }\n\n  renderStats(questionOutcomes: QuestionOutcome[]) {\n    return (<SessionStats\n      pairs={Pairs}\n      outcomes={questionOutcomes}\n      onDismiss={() => this.setState({ stage: Stage.Configuring })} />);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}